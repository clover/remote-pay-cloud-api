/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

var remotemessage_Method = require("../remotemessage/Method");
var remotemessage_Message = require("../remotemessage/Message");

/**
* @constructor
* @augments remotemessage.Message
* @memberof remotemessage
*/
var ActivityResponseMessage = function() {
  remotemessage_Message.call(this);
  this._superClass_ = remotemessage_Message;
  this._class_ = ActivityResponseMessage;
  this.setMethod(remotemessage_Method["ACTIVITY_RESPONSE"]);
  this.resultCode = undefined;
  this.failReason = undefined;
  this.payload = undefined;
  this.action = undefined;
};

ActivityResponseMessage.prototype = Object.create(remotemessage_Message.prototype);
ActivityResponseMessage.prototype.constructor = ActivityResponseMessage;

/**
* Set the field value
* The result code after running this activity
*
* @memberof remotemessage.ActivityResponseMessage
* @param {Number} resultCode must be a long integer
*/
ActivityResponseMessage.prototype.setResultCode = function(resultCode) {
  this.resultCode = resultCode;
};

/**
* Get the field value
* The result code after running this activity
* @memberof remotemessage.ActivityResponseMessage
* @return {Number} must be a long integer
*/
ActivityResponseMessage.prototype.getResultCode = function() {
  return this.resultCode;
};

/**
* Set the field value
* If this activity failed, the reason for the failure
*
* @memberof remotemessage.ActivityResponseMessage
* @param {String} failReason 
*/
ActivityResponseMessage.prototype.setFailReason = function(failReason) {
  this.failReason = failReason;
};

/**
* Get the field value
* If this activity failed, the reason for the failure
* @memberof remotemessage.ActivityResponseMessage
* @return {String} 
*/
ActivityResponseMessage.prototype.getFailReason = function() {
  return this.failReason;
};

/**
* Set the field value
* Response data for this activity
*
* @memberof remotemessage.ActivityResponseMessage
* @param {String} payload 
*/
ActivityResponseMessage.prototype.setPayload = function(payload) {
  this.payload = payload;
};

/**
* Get the field value
* Response data for this activity
* @memberof remotemessage.ActivityResponseMessage
* @return {String} 
*/
ActivityResponseMessage.prototype.getPayload = function() {
  return this.payload;
};

/**
* Set the field value
* The name of the action for this activity
*
* @memberof remotemessage.ActivityResponseMessage
* @param {String} action 
*/
ActivityResponseMessage.prototype.setAction = function(action) {
  this.action = action;
};

/**
* Get the field value
* The name of the action for this activity
* @memberof remotemessage.ActivityResponseMessage
* @return {String} 
*/
ActivityResponseMessage.prototype.getAction = function() {
  return this.action;
};

ActivityResponseMessage._meta_ =  {fields:  {}};
ActivityResponseMessage._meta_._class_ =  ActivityResponseMessage;
ActivityResponseMessage._meta_._superMeta_ = remotemessage_Message._meta_;
ActivityResponseMessage._meta_.fields["resultCode"] = {};
ActivityResponseMessage._meta_.fields["resultCode"].type = Number;
ActivityResponseMessage._meta_.fields["failReason"] = {};
ActivityResponseMessage._meta_.fields["failReason"].type = String;
ActivityResponseMessage._meta_.fields["payload"] = {};
ActivityResponseMessage._meta_.fields["payload"].type = String;
ActivityResponseMessage._meta_.fields["action"] = {};
ActivityResponseMessage._meta_.fields["action"].type = String;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = ActivityResponseMessage;
}

