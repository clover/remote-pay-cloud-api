/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

var remotemessage_Method = require("../remotemessage/Method");
var remotemessage_Message = require("../remotemessage/Message");

/**
* @constructor
* @augments remotemessage.Message
* @memberof remotemessage
*/
var CloverDeviceLogMessage = function() {
  remotemessage_Message.call(this);
  this._superClass_ = remotemessage_Message;
  this._class_ = CloverDeviceLogMessage;
  this.setMethod(remotemessage_Method["CLOVER_DEVICE_LOG_REQUEST"]);
  this.message = undefined;
};

CloverDeviceLogMessage.prototype = Object.create(remotemessage_Message.prototype);
CloverDeviceLogMessage.prototype.constructor = CloverDeviceLogMessage;

/**
* Set the field value
* The message to log.
*
* @memberof remotemessage.CloverDeviceLogMessage
* @param {String} message 
*/
CloverDeviceLogMessage.prototype.setMessage = function(message) {
  this.message = message;
};

/**
* Get the field value
* The message to log.
* @memberof remotemessage.CloverDeviceLogMessage
* @return {String} 
*/
CloverDeviceLogMessage.prototype.getMessage = function() {
  return this.message;
};

CloverDeviceLogMessage._meta_ =  {fields:  {}};
CloverDeviceLogMessage._meta_._class_ =  CloverDeviceLogMessage;
CloverDeviceLogMessage._meta_._superMeta_ = remotemessage_Message._meta_;
CloverDeviceLogMessage._meta_.fields["message"] = {};
CloverDeviceLogMessage._meta_.fields["message"].type = String;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = CloverDeviceLogMessage;
}

