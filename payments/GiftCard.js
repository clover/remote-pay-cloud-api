/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */


/**
* @constructor
* @memberof payments
*/
var GiftCard = function() {
  this._class_ = GiftCard;
  this.track2 = undefined;
  this.cardNumber = undefined;
  this.isManuallyEntered = false;
  this.deviceSerial = undefined;
};


/**
* Set the field value
* Track 2 Card Data
*
* @memberof payments.GiftCard
* @param {String} track2 
*/
GiftCard.prototype.setTrack2 = function(track2) {
  this.track2 = track2;
};

/**
* Get the field value
* Track 2 Card Data
* @memberof payments.GiftCard
* @return {String} 
*/
GiftCard.prototype.getTrack2 = function() {
  return this.track2;
};

/**
* Set the field value
* Embossed Card Number
*
* @memberof payments.GiftCard
* @param {String} cardNumber 
*/
GiftCard.prototype.setCardNumber = function(cardNumber) {
  this.cardNumber = cardNumber;
};

/**
* Get the field value
* Embossed Card Number
* @memberof payments.GiftCard
* @return {String} 
*/
GiftCard.prototype.getCardNumber = function() {
  return this.cardNumber;
};

/**
* Set the field value
* Was Account Number Manually Entered
*
* @memberof payments.GiftCard
* @param {Boolean} isManuallyEntered 
*/
GiftCard.prototype.setIsManuallyEntered = function(isManuallyEntered) {
  this.isManuallyEntered = isManuallyEntered;
};

/**
* Get the field value
* Was Account Number Manually Entered
* @memberof payments.GiftCard
* @return {Boolean} 
*/
GiftCard.prototype.getIsManuallyEntered = function() {
  return this.isManuallyEntered;
};

/**
* Set the field value
* @memberof payments.GiftCard
* @param {String} deviceSerial 
*/
GiftCard.prototype.setDeviceSerial = function(deviceSerial) {
  this.deviceSerial = deviceSerial;
};

/**
* Get the field value
* @memberof payments.GiftCard
* @return {String} 
*/
GiftCard.prototype.getDeviceSerial = function() {
  return this.deviceSerial;
};

/**
* @memberof payments.GiftCard
* @private
*/
GiftCard.prototype.getMetaInfo = function(fieldName) {
  var curclass = this._class_;
  do {
    var fieldMetaInfo = curclass._meta_.fields[fieldName];
    if(fieldMetaInfo) {
      return fieldMetaInfo;
    }
    if(curclass._meta_._superMeta_) {
      curclass = curclass._meta_._superMeta_._class_;
    } else {
      curclass = null;
    }
  } while(curclass);
  return null;
};

GiftCard.prototype.toString = function() {
  return JSON.stringify(this);
};

GiftCard._meta_ =  {fields:  {}};
GiftCard._meta_._class_ =  GiftCard;
GiftCard._meta_.fields["track2"] = {};
GiftCard._meta_.fields["track2"].type = String;
GiftCard._meta_.fields["cardNumber"] = {};
GiftCard._meta_.fields["cardNumber"].type = String;
GiftCard._meta_.fields["isManuallyEntered"] = {};
GiftCard._meta_.fields["isManuallyEntered"].type = Boolean;
GiftCard._meta_.fields["deviceSerial"] = {};
GiftCard._meta_.fields["deviceSerial"].type = String;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = GiftCard;
}

