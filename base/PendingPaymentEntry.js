/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */


/**
* @constructor
* @memberof base
*/
var PendingPaymentEntry = function() {
  this._class_ = PendingPaymentEntry;
  this.amount = undefined;
  this.paymentId = undefined;
};


/**
* Set the field value
* Total amount paid
*
* @memberof base.PendingPaymentEntry
* @param {Number} amount must be a long integer
*/
PendingPaymentEntry.prototype.setAmount = function(amount) {
  this.amount = amount;
};

/**
* Get the field value
* Total amount paid
* @memberof base.PendingPaymentEntry
* @return {Number} must be a long integer
*/
PendingPaymentEntry.prototype.getAmount = function() {
  return this.amount;
};

/**
* Set the field value
* Unique identifier for a payment
*
* @memberof base.PendingPaymentEntry
* @param {String} paymentId 
*/
PendingPaymentEntry.prototype.setPaymentId = function(paymentId) {
  this.paymentId = paymentId;
};

/**
* Get the field value
* Unique identifier for a payment
* @memberof base.PendingPaymentEntry
* @return {String} 
*/
PendingPaymentEntry.prototype.getPaymentId = function() {
  return this.paymentId;
};

/**
* @memberof base.PendingPaymentEntry
* @private
*/
PendingPaymentEntry.prototype.getMetaInfo = function(fieldName) {
  var curclass = this._class_;
  do {
    var fieldMetaInfo = curclass._meta_.fields[fieldName];
    if(fieldMetaInfo) {
      return fieldMetaInfo;
    }
    if(curclass._meta_._superMeta_) {
      curclass = curclass._meta_._superMeta_._class_;
    } else {
      curclass = null;
    }
  } while(curclass);
  return null;
};

PendingPaymentEntry.prototype.toString = function() {
  return JSON.stringify(this);
};

PendingPaymentEntry._meta_ =  {fields:  {}};
PendingPaymentEntry._meta_._class_ =  PendingPaymentEntry;
PendingPaymentEntry._meta_.fields["amount"] = {};
PendingPaymentEntry._meta_.fields["amount"].type = Number;
PendingPaymentEntry._meta_.fields["paymentId"] = {};
PendingPaymentEntry._meta_.fields["paymentId"].type = String;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = PendingPaymentEntry;
}

